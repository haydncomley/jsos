@use "easy-theme" as theme;
@use "/app/lib/theme/utility" as util;

.desktopWindowWrapper {
    position: fixed;
    left: 10rem;
    top: 5rem;
    min-width: 5rem;
    min-height: 5rem;

    &.isActive {
        z-index: 2;
    }
}

@keyframes windowIn {
    0% {
        transform: scale(0.75) translateY(-25%);
        opacity: 0;
    }
    100% {
        transform: scale(1) translateY(0rem);
        opacity: 1;
    }
}

.desktopWindow {
    display: flex;
    padding: calc(theme.Variable('gap') * 0.75);
    border-radius: theme.Variable('radius');
    cursor: pointer;
    transition: .05s ease;
    transform-origin: 50% 150%;
    animation: windowIn .25s ease backwards;
    width: 100%;
    height: 100%;
    @include util.glass;

    .isActive & {
        @include util.boldGlass;
    }

    .isDragging & {
        cursor: grabbing;
        transform: scale(1.01);
        @include util.boldGlass;

        .desktopWindowContent {
            pointer-events: none;
        }
    }
}

.desktopWindowContent {
    width: 100%;
    height: 100%;
    border-radius: calc(theme.Variable('radius') * 0.5);
    overflow: hidden;
    cursor: auto;
}

.desktopWindowAnchor {
    position: absolute;
    height: theme.Variable('gap');
    width: theme.Variable('gap');
    border-radius: 50%;

    &:hover {
        @include util.boldGlass('selection');
    }
    
    &.desktopWindowAnchorTop {
        top: 0;
    }

    &.desktopWindowAnchorRight {
        right: 0;
    }

    &.desktopWindowAnchorBottom {
        bottom: 0;
    }

    &.desktopWindowAnchorLeft {
        left: 0;
    }

    &.desktopWindowAnchorTop.desktopWindowAnchorLeft {
        cursor: nw-resize;
    }

    &.desktopWindowAnchorTop.desktopWindowAnchorRight {
        cursor: ne-resize;
    }

    &.desktopWindowAnchorBottom.desktopWindowAnchorLeft {
        cursor: sw-resize;
    }

    &.desktopWindowAnchorBottom.desktopWindowAnchorRight {
        cursor: se-resize;
    }
}